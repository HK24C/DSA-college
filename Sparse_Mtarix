#include<stdio.h>

#define MAX_ROWS 20
#define MAX_COLS 20
#define MAX_TERMS 20

typedef struct{
    int row;
    int col;
    int value;
}element;
typedef struct Sparse_Matrix
{
    element data[MAX_TERMS+1];
    int rows;
    int cols;
    int terms;
} S_Matrix;
void create(S_Matrix *);
void display(S_Matrix *);
void add(S_Matrix *,S_Matrix *,S_Matrix *);

int main()
{
    S_Matrix a,b,c,m;

    printf("Enter matrix A:\n");
    create(&a);
    printf("\n Matrix A:\n");
    display(&a);

    printf("\nEnter matrix B:\n");
    create(&b);
    printf("\n Matrix B:\n");
    display(&b);

    add(&a,&b,&c);
    printf("\nSum of A and B matrices:\n");
    display(&c);

    return 0;
}
void create(S_Matrix *a)
{
    int i,j,k,value;

    printf("Enter number of rows: ");
    scanf("%d",&m->rows);
    printf("enter number of columns: ");
    scanf("%d",&m->cols);
    printf("enter numbr of non-zero elemnts: ");
    scanf("%d",&m->terms);

    for(k=i;k<=m->terms;k++)
    {
        printf("Enter row,columns and vlaue of element %d: ",k);
        scanf("%d %d %d",&i,&j,&value);
        m->data[k].row=i;
        m->data[k].col=j;
        m->data[k].value=value;
    }
}
void display(S_Matrix *m)
{
    int i,j,k;
     for(i=1;i<=m->rows;i++)
     {
        for(j=1;j<=m->cols;j++)
        {
            for(k=1;k<=m->terms;k++)
            {
                if(m->data[k].row==i&&m->data[k].col==j){
                    printf("%d",m->data[k].value);
                    break;
                }
            }
            if(k>m->terms){
                printf("0 ");
            }
        }
        printf("\n");
     }
}
